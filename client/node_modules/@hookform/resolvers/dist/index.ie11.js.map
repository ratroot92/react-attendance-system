{"version":3,"file":"index.ie11.js","sources":["../src/yup.ts","../src/utils/convertArrayToPathName.ts","../src/superstruct.ts","../src/joi.ts"],"sourcesContent":["import { Resolver, transformToNestObject, FieldValues } from 'react-hook-form';\nimport Yup from 'yup';\n\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) =>\n  Array.isArray(error.inner) && error.inner.length\n    ? error.inner.reduce(\n        (previous: Record<string, any>, { path, message, type }) => {\n          const previousTypes = (previous[path] && previous[path].types) || {};\n          const key = path || type;\n\n          return {\n            ...previous,\n            ...(key\n              ? {\n                  [key]: {\n                    ...(previous[key] || {\n                      message,\n                      type,\n                    }),\n                    ...(validateAllFieldCriteria\n                      ? {\n                          types: {\n                            ...previousTypes,\n                            [type]: previousTypes[type]\n                              ? [...[].concat(previousTypes[type]), message]\n                              : message,\n                          },\n                        }\n                      : {}),\n                  },\n                }\n              : {}),\n          };\n        },\n        {},\n      )\n    : {\n        [error.path]: { message: error.message, type: error.type },\n      };\n\nexport const yupResolver = <TFieldValues extends FieldValues>(\n  schema: Yup.ObjectSchema | Yup.Lazy,\n  options: Omit<Yup.ValidateOptions, 'context'> = {\n    abortEarly: false,\n  },\n): Resolver<TFieldValues> => async (\n  values,\n  context,\n  validateAllFieldCriteria = false,\n) => {\n  try {\n    if (\n      (options as Yup.ValidateOptions).context &&\n      process.env.NODE_ENV === 'development'\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n      );\n    }\n    return {\n      values: (await schema.validate(values, {\n        ...options,\n        context,\n      })) as any,\n      errors: {},\n    };\n  } catch (e) {\n    const parsedErrors = parseErrorSchema(e, validateAllFieldCriteria);\n    return {\n      values: {},\n      errors: transformToNestObject(parsedErrors),\n    };\n  }\n};\n","export default (paths: (string | number)[]): string =>\n  paths\n    .reduce(\n      (previous, path: string | number, index): string =>\n        `${previous}${\n          typeof path === 'string'\n            ? `${index > 0 ? '.' : ''}${path}`\n            : `[${path}]`\n        }`,\n      '',\n    )\n    .toString();\n","import {\n  appendErrors,\n  transformToNestObject,\n  Resolver,\n  FieldValues,\n} from 'react-hook-form';\nimport Superstruct from 'superstruct';\nimport convertArrayToPathName from './utils/convertArrayToPathName';\n\nconst parseErrorSchema = (\n  error: Superstruct.StructError,\n  validateAllFieldCriteria: boolean,\n) =>\n  Array.isArray(error.failures)\n    ? error.failures.reduce(\n        (previous: Record<string, any>, { path, message = '', type }) => {\n          const currentPath = convertArrayToPathName(path);\n\n          return {\n            ...previous,\n            ...(path\n              ? previous[currentPath] && validateAllFieldCriteria\n                ? {\n                    [currentPath]: appendErrors(\n                      currentPath,\n                      validateAllFieldCriteria,\n                      previous,\n                      type || '',\n                      message,\n                    ),\n                  }\n                : {\n                    [currentPath]: previous[currentPath] || {\n                      message,\n                      type,\n                      ...(validateAllFieldCriteria\n                        ? {\n                            types: { [type || '']: message || true },\n                          }\n                        : {}),\n                    },\n                  }\n              : {}),\n          };\n        },\n        {},\n      )\n    : [];\n\nexport const superstructResolver = <TFieldValues extends FieldValues>(\n  schema: Superstruct.Struct,\n): Resolver<TFieldValues> => async (\n  values,\n  _,\n  validateAllFieldCriteria = false,\n) => {\n  try {\n    return {\n      values: schema(values),\n      errors: {},\n    };\n  } catch (e) {\n    return {\n      values: {},\n      errors: transformToNestObject(\n        parseErrorSchema(e, validateAllFieldCriteria),\n      ),\n    };\n  }\n};\n","import {\n  appendErrors,\n  transformToNestObject,\n  Resolver,\n  FieldValues,\n} from 'react-hook-form';\nimport Joi from '@hapi/joi';\nimport convertArrayToPathName from './utils/convertArrayToPathName';\n\nconst parseErrorSchema = (\n  error: Joi.ValidationError,\n  validateAllFieldCriteria: boolean,\n) =>\n  Array.isArray(error.details)\n    ? error.details.reduce(\n        (previous: Record<string, any>, { path, message = '', type }) => {\n          const currentPath = convertArrayToPathName(path);\n\n          return {\n            ...previous,\n            ...(path\n              ? previous[currentPath] && validateAllFieldCriteria\n                ? {\n                    [currentPath]: appendErrors(\n                      currentPath,\n                      validateAllFieldCriteria,\n                      previous,\n                      type,\n                      message,\n                    ),\n                  }\n                : {\n                    [currentPath]: previous[currentPath] || {\n                      message,\n                      type,\n                      ...(validateAllFieldCriteria\n                        ? {\n                            types: { [type]: message || true },\n                          }\n                        : {}),\n                    },\n                  }\n              : {}),\n          };\n        },\n        {},\n      )\n    : [];\n\nexport const joiResolver = <TFieldValues extends FieldValues>(\n  schema: Joi.Schema,\n  options: Joi.AsyncValidationOptions = {\n    abortEarly: false,\n  },\n): Resolver<TFieldValues> => async (\n  values,\n  _,\n  validateAllFieldCriteria = false,\n) => {\n  try {\n    return {\n      values: await schema.validateAsync(values, {\n        ...options,\n      }),\n      errors: {},\n    };\n  } catch (e) {\n    return {\n      values: {},\n      errors: transformToNestObject(\n        parseErrorSchema(e, validateAllFieldCriteria),\n      ),\n    };\n  }\n};\n"],"names":["parseErrorSchema"],"mappings":"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"}