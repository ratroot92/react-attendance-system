{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n// \t\t}\n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<br />\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from 'react';\nimport './LoginPage.css';\nimport * as FaIcons from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport userService from '../services/userService';\nimport './LoginPage.css';\nimport 'react-notifications/lib/notifications.css';\nimport { AuthContext } from '../context/authContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [load, setLoad] = React.useState(true);\n  const {\n    setIsAuthenticated,\n    setUser\n  } = React.useContext(AuthContext); // \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n\n  React.useEffect(() => {\n    setLoad(true);\n    return () => {\n      setLoad(true);\n    };\n  }, [setLoad]); // \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n  // \t/** FORM_VALIDATION START * */\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().email().required('Email is required'),\n    password: yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(14, 'Password must be at most 14 characters')\n  }); // \t/** FORM_VALIDATION END * */\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      email: 'admin@admin.com',\n      password: 'admin@123'\n    }\n  }); // \t/** HANDLE FORM SUBMIT START * */\n\n  const onSubmit = formData => {\n    userService.login({\n      email: formData.email,\n      password: formData.password\n    }).then(resData => {\n      if (resData.status !== 401) {\n        const {\n          success,\n          data,\n          message\n        } = resData;\n\n        if (success) {\n          NotificationManager.success(message);\n          setIsAuthenticated(true);\n          setUser({\n            username: data.username,\n            email: data.email,\n            status: data.status\n          });\n        } else {\n          NotificationManager.warning('in valid credentails ...');\n        }\n      } else {}\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // \t/** HANDLE FORM SUBMIT END * */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [load ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-primary text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-user-circle\",\n            style: {\n              fontSize: '110px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-prepend\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaUser, {\n                  size: \"25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              className: \"form-control\",\n              type: \"text\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 9\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.email) ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"font-weight-bold text-danger\",\n              children: errors === null || errors === void 0 ? void 0 : errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 10\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-prepend\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaLock, {\n                  size: \"25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              className: \"form-control\",\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              placeholder: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 9\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.password) ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"font-weight-bold text-danger\",\n              children: errors === null || errors === void 0 ? void 0 : errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 10\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary btn-block\",\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 10\n              }, this), \" Remember ME\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"#\",\n                children: \"Forgot your password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaFacebook, {\n              size: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaTwitterSquare, {\n              size: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaGoogle, {\n              size: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(BoxLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginPage, \"oE6OOPpLFrgkAt7IuG/lc0Dddg8=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx"],"names":["React","FaIcons","Link","useForm","BoxLoading","yupResolver","yup","NotificationContainer","NotificationManager","userService","AuthContext","LoginPage","load","setLoad","useState","setIsAuthenticated","setUser","useContext","useEffect","validationSchema","object","shape","email","string","required","password","min","max","register","errors","handleSubmit","reset","resolver","defaultValues","onSubmit","formData","login","then","resData","status","success","data","message","username","warning","catch","err","console","log","fontSize"],"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","sourcesContent":["// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n\n// \t\t}\n\n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<br />\n\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from 'react';\nimport './LoginPage.css';\nimport * as FaIcons from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport userService from '../services/userService';\nimport './LoginPage.css';\nimport 'react-notifications/lib/notifications.css';\nimport { AuthContext } from '../context/authContext.js';\nconst LoginPage = () => {\n\tconst [load, setLoad] = React.useState(true);\n\tconst { setIsAuthenticated, setUser } = React.useContext(AuthContext);\n\n\t// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n\tReact.useEffect(() => {\n\t\tsetLoad(true);\n\t\treturn () => {\n\t\t\tsetLoad(true);\n\t\t};\n\t}, [setLoad]);\n\t// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n\t// \t/** FORM_VALIDATION START * */\n\tconst validationSchema = yup.object().shape({\n\t\temail: yup.string().email().required('Email is required'),\n\t\tpassword: yup\n\t\t\t.string()\n\t\t\t.required('Password is required')\n\t\t\t.min(6, 'Password must be at least 6 characters')\n\t\t\t.max(14, 'Password must be at most 14 characters'),\n\t});\n\t// \t/** FORM_VALIDATION END * */\n\n\tconst { register, errors, handleSubmit, reset } = useForm({\n\t\tresolver: yupResolver(validationSchema),\n\t\tdefaultValues: {\n\t\t\temail: 'admin@admin.com',\n\t\t\tpassword: 'admin@123',\n\t\t},\n\t});\n\n\t// \t/** HANDLE FORM SUBMIT START * */\n\tconst onSubmit = (formData) => {\n\t\tuserService\n\t\t\t.login({ email: formData.email, password: formData.password })\n\t\t\t.then((resData) => {\n\t\t\t\tif (resData.status !== 401) {\n\t\t\t\t\tconst { success, data, message } = resData;\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tNotificationManager.success(message);\n\t\t\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\t\t\tsetUser({ username: data.username, email: data.email, status: data.status });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tNotificationManager.warning('in valid credentails ...');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\t// \t/** HANDLE FORM SUBMIT END * */\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t{load ? (\n\t\t\t\t\n\t\t\t\t<div className='form-box'>\n\t\t\t\t\t<div className='header-form'>\n\t\t\t\t\t\t<h4 className='text-primary text-center'>\n\t\t\t\t\t\t\t<i className='fa fa-user-circle' style={{ fontSize: '110px' }}></i>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<div className='image'></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='body-form'>\n\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t<div className='input-group mb-3'>\n\t\t\t\t\t\t\t\t<div className='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t<span className='input-group-text'>\n\t\t\t\t\t\t\t\t\t\t<FaIcons.FaUser size='25' />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tplaceholder='email'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{errors?.email ? (\n\t\t\t\t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='input-group mb-3'>\n\t\t\t\t\t\t\t\t<div className='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t<span className='input-group-text'>\n\t\t\t\t\t\t\t\t\t\t<FaIcons.FaLock size='25' />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{errors?.password ? (\n\t\t\t\t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type='submit' className='btn btn-secondary btn-block'>\n\t\t\t\t\t\t\t\tLOGIN\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className='message'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input type='checkbox' /> Remember ME\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Link href='#'>Forgot your password</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className='social'>\n\t\t\t\t\t\t\t<Link href='#'>\n\t\t\t\t\t\t\t\t<FaIcons.FaFacebook size='25' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href='#'>\n\t\t\t\t\t\t\t\t<FaIcons.FaTwitterSquare size='25' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href='#'>\n\t\t\t\t\t\t\t\t<FaIcons.FaGoogle size='25' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t) : (\n\t\t\t\t<BoxLoading />\n\t\t\t)}\n\t\t\t<NotificationContainer />\n\t\t</div>\n\t);\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}