{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx\";\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n// \t\t}\n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<br />\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormPage = () => {\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h5 text-center mb-4\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grey-text\",\n            children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Type your email\",\n              icon: \"envelope\",\n              group: true,\n              type: \"email\",\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Type your password\",\n              icon: \"lock\",\n              group: true,\n              type: \"password\",\n              validate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 1\n  }, this);\n};\n\n_c = FormPage;\nexport default FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","FormPage"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,UAA/D;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACvB,sBACA,QAAC,YAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA,+BACE;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,iBAAhB;AAAkC,cAAA,IAAI,EAAC,UAAvC;AAAkD,cAAA,KAAK,MAAvD;AAAwD,cAAA,IAAI,EAAC,OAA7D;AAAqE,cAAA,QAAQ,MAA7E;AAA8E,cAAA,KAAK,EAAC,OAApF;AACE,cAAA,OAAO,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,oBAAhB;AAAqC,cAAA,IAAI,EAAC,MAA1C;AAAiD,cAAA,KAAK,MAAtD;AAAuD,cAAA,IAAI,EAAC,UAA5D;AAAuE,cAAA,QAAQ;AAA/E;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAOE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAmBC,CApBD;;KAAMA,Q;AAsBN,eAAeA,QAAf","sourcesContent":["// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n\n\n\n\n\t\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n\n\n\n\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n\n\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n\t\t\t\n// \t\t}\n\t\t   \n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<br />\n\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\n\nconst FormPage = () => {\nreturn (\n<MDBContainer>\n  <MDBRow>\n    <MDBCol md=\"6\">\n      <form>\n        <p className=\"h5 text-center mb-4\">Sign in</p>\n        <div className=\"grey-text\">\n          <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\n            success=\"right\" />\n          <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" validate />\n        </div>\n        <div className=\"text-center\">\n          <MDBBtn>Login</MDBBtn>\n        </div>\n      </form>\n    </MDBCol>\n  </MDBRow>\n</MDBContainer>\n);\n};\n\nexport default FormPage;"]},"metadata":{},"sourceType":"module"}