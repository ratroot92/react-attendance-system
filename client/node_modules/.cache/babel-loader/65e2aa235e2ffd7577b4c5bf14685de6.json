{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/hoc/PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    // eslint-disable-next-line consistent-return\n    render: props => {\n      if (!isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PrivateRoute, \"V63do9pNTv1q4M9O8C9qYlm3TOw=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/hoc/PrivateRoute.jsx"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","roles","rest","isAuthenticated","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD,KAA8C;AAAA;;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAsBT,UAAU,CAACG,WAAD,CAAtC;AACA,sBACC,QAAC,KAAD,OACKK,IADL;AAEC;AACA,IAAA,MAAM,EAAGE,KAAD,IAAW;AAClB,UAAI,CAACD,eAAL,EAAsB;AACrB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACA,0BAAO,QAAC,SAAD,OAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AAED;AATF;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAfD;;GAAMN,Y;;KAAAA,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/authContext';\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\n\tconst { isAuthenticated } = useContext(AuthContext);\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\t// eslint-disable-next-line consistent-return\n\t\t\trender={(props) => {\n\t\t\t\tif (!isAuthenticated) {\n\t\t\t\t\treturn <Redirect to={{ pathname: '/', state: { from: props.location } }} />;\n\t\t\t\t}\n\t\t\t\t\treturn <Component {...props} />;\n\t\t\t\t\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}