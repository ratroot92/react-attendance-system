{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx\";\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n// \t\t}\n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<br />\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormPage = () => {\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h4 text-center mb-4\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormLoginEmailEx\",\n            className: \"grey-text\",\n            children: \"Your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"defaultFormLoginEmailEx\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defaultFormLoginPasswordEx\",\n            className: \"grey-text\",\n            children: \"Your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"defaultFormLoginPasswordEx\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4\",\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"indigo\",\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 1\n  }, this);\n};\n\n_c = FormPage;\nexport default FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","FormPage"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,UAArD;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACvB,sBACA,QAAC,YAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA,+BACE;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,OAAO,EAAC,yBAAf;AAAyC,YAAA,SAAS,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAC,yBAAvB;AAAiD,YAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAO,YAAA,OAAO,EAAC,4BAAf;AAA4C,YAAA,SAAS,EAAC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,EAAE,EAAC,4BAA1B;AAAuD,YAAA,SAAS,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAuB,cAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAuBC,CAxBD;;KAAMA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n\n\n\n\n\t\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n\n\n\n\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n\n\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n\t\t\t\n// \t\t}\n\t\t   \n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<br />\n\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\nconst FormPage = () => {\nreturn (\n<MDBContainer>\n  <MDBRow>\n    <MDBCol md=\"6\">\n      <form>\n        <p className=\"h4 text-center mb-4\">Sign in</p>\n        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n          Your email\n        </label>\n        <input type=\"email\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" />\n        <br />\n        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n          Your password\n        </label>\n        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" />\n        <div className=\"text-center mt-4\">\n          <MDBBtn color=\"indigo\" type=\"submit\">Login</MDBBtn>\n        </div>\n      </form>\n    </MDBCol>\n  </MDBRow>\n</MDBContainer>\n);\n};\n\nexport default FormPage;"]},"metadata":{},"sourceType":"module"}