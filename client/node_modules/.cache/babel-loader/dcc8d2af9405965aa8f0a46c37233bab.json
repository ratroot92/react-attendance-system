{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport userService from '../services/userService';\nimport './LoginPage.css';\nimport 'react-notifications/lib/notifications.css';\nimport { AuthContext } from '../context/authContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [load, setLoad] = React.useState(true);\n  const {\n    setIsAuthenticated,\n    setUser\n  } = React.useContext(AuthContext);\n  /** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n\n  React.useEffect(() => {\n    setLoad(true);\n    return () => {\n      setLoad(true);\n    };\n  }, [setLoad]);\n  /** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n  /** HANDLE FORM SUBMIT START * */\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().email().required('Email is required'),\n    password: yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(14, 'Password must be at most 14 characters')\n  });\n  /** HANDLE FORM SUBMIT END * */\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      email: 'admin@admin.com',\n      password: 'admin@123'\n    }\n  });\n  /** HANDLE FORM SUBMIT START * */\n\n  const onSubmit = formData => {\n    userService.login({\n      email: formData.email,\n      password: formData.password\n    }).then(resData => {\n      if (resData.status !== 401) {\n        const {\n          success,\n          data,\n          message\n        } = resData;\n\n        if (success) {\n          NotificationManager.success(message);\n          setIsAuthenticated(true);\n          setUser({\n            username: data.username,\n            email: data.email,\n            status: data.status\n          });\n        } else {\n          NotificationManager.warning(\"in valid credentails ...\");\n        }\n      } else {}\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  /** HANDLE FORM SUBMIT END * */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [load ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hgroup\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome back!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter your details to sign into your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"log-form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group log-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            type: \"text\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) ? /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"font-weight-bold text-danger\",\n          children: errors === null || errors === void 0 ? void 0 : errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group log-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: register,\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.password) ? /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"font-weight-bold text-danger\",\n          children: errors === null || errors === void 0 ? void 0 : errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-log-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            name: \"btn_submit\",\n            className: \"log-form-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(BoxLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginPage, \"U7J8hcZRUN/Wl50ODE+s45hBKv0=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx"],"names":["React","useForm","BoxLoading","yupResolver","yup","NotificationContainer","NotificationManager","userService","AuthContext","LoginPage","load","setLoad","useState","setIsAuthenticated","setUser","useContext","useEffect","validationSchema","object","shape","email","string","required","password","min","max","register","errors","handleSubmit","reset","resolver","defaultValues","onSubmit","formData","login","then","resData","status","success","data","message","username","warning","catch","err","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {BoxLoading} from 'react-loadingg'\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport userService from '../services/userService';\nimport './LoginPage.css';\nimport 'react-notifications/lib/notifications.css';\nimport {AuthContext} from '../context/authContext.js'\nexport default function LoginPage() {\n\n\tconst [load,setLoad]=React.useState(true);\n\tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n\n\n\n\n\t\n\t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n\tReact.useEffect(()=>{\n\t\tsetLoad(true);\n\treturn ()=>{\n\t\tsetLoad(true);\n\t}\n\t},[setLoad])\n\t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n\n\n\n\n\t/** HANDLE FORM SUBMIT START * */\n\tconst validationSchema = yup.object().shape({\n\t\temail: yup.string().email().required('Email is required'),\n\t\tpassword: yup\n\t\t\t.string()\n\t\t\t.required('Password is required')\n\t\t\t.min(6, 'Password must be at least 6 characters')\n\t\t\t.max(14, 'Password must be at most 14 characters'),\n\t});\n\t/** HANDLE FORM SUBMIT END * */\n\n\tconst { register, errors, handleSubmit, reset } = useForm({\n\t\tresolver: yupResolver(validationSchema),\n\t\tdefaultValues:{\n\t\t\temail:'admin@admin.com',\n\t\t\tpassword:'admin@123'\n\t\t}\n\t});\n\n\n\t/** HANDLE FORM SUBMIT START * */\n\tconst onSubmit = (formData) => {\n\t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n\t\tif(resData.status!==401){\n\t\t\tconst {success,data,message}=resData;\n\t\t    if(success){\n\t\t\t\tNotificationManager.success(message);\n\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n\t\t\t}\n\t\t    else{\n\t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t\n\t\t}\n\t\t   \n\t\t}).catch((err)=>{\n\t\t    console.log(err);\n\n\t\t})\n\t};\n\t/** HANDLE FORM SUBMIT END * */\n\treturn (\n\t\t<div>\n\t\t\t{load ? (\t<section>\n\t\t\t\t<hgroup>\n\t\t\t\t\t<h2>Welcome back!</h2>\n\t\t\t\t\t<p>Please enter your details to sign into your account</p>\n\t\t\t\t</hgroup>\n\n\t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<div className='group log-input'>\n\t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n\t\t\t\t\t</div>\n\t\t\t\t\t{errors?.email ? (\n\t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className='group log-input'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{errors?.password ? (\n\t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<div className='container-log-btn'>\n\t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n\t\t\t\t\t\t\t<span>Login</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</section>):(<BoxLoading/>)}\n\t\t<NotificationContainer/>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}