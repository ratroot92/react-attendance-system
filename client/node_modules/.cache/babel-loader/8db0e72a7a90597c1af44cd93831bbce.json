{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n// \t\t}\n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<br />\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from 'react';\nimport './LoginPage.css';\nimport * as FaIcons from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport userService from '../services/userService';\nimport './LoginPage.css';\nimport 'react-notifications/lib/notifications.css';\nimport { AuthContext } from '../context/authContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [load, setLoad] = React.useState(true);\n  const {\n    setIsAuthenticated,\n    setUser\n  } = React.useContext(AuthContext); // \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n\n  React.useEffect(() => {\n    setLoad(true);\n    return () => {\n      setLoad(true);\n    };\n  }, [setLoad]); // \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n  // \t/** FORM_VALIDATION START * */\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().email().required('Email is required'),\n    password: yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(14, 'Password must be at most 14 characters')\n  }); // \t/** FORM_VALIDATION END * */\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      email: 'admin@admin.com',\n      password: 'admin@123'\n    }\n  }); // \t/** HANDLE FORM SUBMIT START * */\n\n  const onSubmit = formData => {\n    userService.login({\n      email: formData.email,\n      password: formData.password\n    }).then(resData => {\n      if (resData.status !== 401) {\n        const {\n          success,\n          data,\n          message\n        } = resData;\n\n        if (success) {\n          NotificationManager.success(message);\n          setIsAuthenticated(true);\n          setUser({\n            username: data.username,\n            email: data.email,\n            status: data.status\n          });\n        } else {\n          NotificationManager.warning(\"in valid credentails ...\");\n        }\n      } else {}\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // \t/** HANDLE FORM SUBMIT END * */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [load ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-primary text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-user-circle\",\n            style: {\n              fontSize: \"110px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-prepend\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaUser, {\n                  size: \"25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 4\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: register,\n              type: \"text\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 1\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.email) ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"font-weight-bold text-danger\",\n              children: errors === null || errors === void 0 ? void 0 : errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 8\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-prepend\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(FaIcons.FaLock, {\n                  size: \"25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 4\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 2\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary btn-block\",\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 8\n              }, this), \" Remember ME\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"#\",\n                children: \"Forgot your password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaFacebook, {\n              size: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaTwitterSquare, {\n              size: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaGoogle, {\n              size: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(BoxLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 4\n  }, this);\n};\n\n_s(LoginPage, \"U7J8hcZRUN/Wl50ODE+s45hBKv0=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/LoginPage.jsx"],"names":["React","FaIcons","Link","useForm","BoxLoading","yupResolver","yup","NotificationContainer","NotificationManager","userService","AuthContext","LoginPage","load","setLoad","useState","setIsAuthenticated","setUser","useContext","useEffect","validationSchema","object","shape","email","string","required","password","min","max","register","errors","handleSubmit","reset","resolver","defaultValues","onSubmit","formData","login","then","resData","status","success","data","message","username","warning","catch","err","console","log","fontSize"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,iBAAP;AACA,OAAO,2CAAP;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;;;AACA,MAAOC,SAAS,GAAC,MAAI;AAAA;;AAGnB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeb,KAAK,CAACc,QAAN,CAAe,IAAf,CAArB;AACD,QAAM;AAACC,IAAAA,kBAAD;AAAoBC,IAAAA;AAApB,MAA6BhB,KAAK,CAACiB,UAAN,CAAiBP,WAAjB,CAAnC,CAJoB,CAUrB;;AACCV,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAI;AACnBL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAAO,MAAI;AACVA,MAAAA,OAAO,CAAC,IAAD,CAAP;A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","sourcesContent":["// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import {BoxLoading} from 'react-loadingg'\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\n// import userService from '../services/userService';\n// import './LoginPage.css';\n// import 'react-notifications/lib/notifications.css';\n// import {AuthContext} from '../context/authContext.js'\n// export default function LoginPage() {\n\n// \tconst [load,setLoad]=React.useState(true);\n// \tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n\n\n\n\n\t\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n// \tReact.useEffect(()=>{\n// \t\tsetLoad(true);\n// \treturn ()=>{\n// \t\tsetLoad(true);\n// \t}\n// \t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n\n\n\n\n// \t/** FORM_VALIDATION START * */\n// \tconst validationSchema = yup.object().shape({\n// \t\temail: yup.string().email().required('Email is required'),\n// \t\tpassword: yup\n// \t\t\t.string()\n// \t\t\t.required('Password is required')\n// \t\t\t.min(6, 'Password must be at least 6 characters')\n// \t\t\t.max(14, 'Password must be at most 14 characters'),\n// \t});\n// \t/** FORM_VALIDATION END * */\n\n// \tconst { register, errors, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(validationSchema),\n// \t\tdefaultValues:{\n// \t\t\temail:'admin@admin.com',\n// \t\t\tpassword:'admin@123'\n// \t\t}\n// \t});\n\n\n// \t/** HANDLE FORM SUBMIT START * */\n// \tconst onSubmit = (formData) => {\n// \t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n// \t\tif(resData.status!==401){\n// \t\t\tconst {success,data,message}=resData;\n// \t\t    if(success){\n// \t\t\t\tNotificationManager.success(message);\n// \t\t\t\tsetIsAuthenticated(true);\n// \t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n// \t\t\t}\n// \t\t    else{\n// \t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n// \t\t\t}\n// \t\t}\n// \t\telse{\n\t\t\t\n// \t\t}\n\t\t   \n// \t\t}).catch((err)=>{\n// \t\t    console.log(err);\n\n// \t\t})\n// \t};\n// \t/** HANDLE FORM SUBMIT END * */\n// \treturn (\n// \t\t<div>\n// \t\t\t{load ? (\t<section>\n// \t\t\t\t<hgroup>\n// \t\t\t\t\t<h2>Welcome back!</h2>\n// \t\t\t\t\t<p>Please enter your details to sign into your account</p>\n// \t\t\t\t</hgroup>\n\n// \t\t\t\t<form className='log-form' onSubmit={handleSubmit(onSubmit)}>\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input ref={register} type='text' id='email' name='email' placeholder='email' />\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.email ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<div className='group log-input'>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\ttype='password'\n// \t\t\t\t\t\t\tid='password'\n// \t\t\t\t\t\t\tname='password'\n// \t\t\t\t\t\t\tplaceholder='Password'\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{errors?.password ? (\n// \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.password.message}</small>\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<></>\n// \t\t\t\t\t)}\n\n// \t\t\t\t\t<br />\n\n// \t\t\t\t\t<div className='container-log-btn'>\n// \t\t\t\t\t\t<button type='submit' name='btn_submit' className='log-form-btn'>\n// \t\t\t\t\t\t\t<span>Login</span>\n// \t\t\t\t\t\t</button>\n// \t\t\t\t\t</div>\n// \t\t\t\t</form>\n// \t\t\t</section>):(<BoxLoading/>)}\n// \t\t<NotificationContainer/>\n// \t\t</div>\n// \t);\n// }\nimport React from 'react';\nimport './LoginPage.css';\nimport * as FaIcons from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport {BoxLoading} from 'react-loadingg'\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport userService from '../services/userService';\nimport './LoginPage.css';\nimport 'react-notifications/lib/notifications.css';\nimport {AuthContext} from '../context/authContext.js'\nconst  LoginPage=()=>{\n\n\n\t\tconst [load,setLoad]=React.useState(true);\n\tconst {setIsAuthenticated,setUser}=React.useContext(AuthContext);\n\n\n\n\n\t\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT START * */\n\tReact.useEffect(()=>{\n\t\tsetLoad(true);\n\treturn ()=>{\n\t\tsetLoad(true);\n\t}\n\t},[setLoad])\n// \t/** COMPOENENT_DID_MOUNT && COMPONENT_DID_UNMOUNT END * */\n\n\n\n\n\n// \t/** FORM_VALIDATION START * */\n\tconst validationSchema = yup.object().shape({\n\t\temail: yup.string().email().required('Email is required'),\n\t\tpassword: yup\n\t\t\t.string()\n\t\t\t.required('Password is required')\n\t\t\t.min(6, 'Password must be at least 6 characters')\n\t\t\t.max(14, 'Password must be at most 14 characters'),\n\t});\n// \t/** FORM_VALIDATION END * */\n\n\tconst { register, errors, handleSubmit, reset } = useForm({\n\t\tresolver: yupResolver(validationSchema),\n\t\tdefaultValues:{\n\t\t\temail:'admin@admin.com',\n\t\t\tpassword:'admin@123'\n\t\t}\n\t});\n\n\n// \t/** HANDLE FORM SUBMIT START * */\n\tconst onSubmit = (formData) => {\n\t\tuserService.login({email:formData.email,password:formData.password}).then((resData)=>{\n\t\tif(resData.status!==401){\n\t\t\tconst {success,data,message}=resData;\n\t\t    if(success){\n\t\t\t\tNotificationManager.success(message);\n\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\tsetUser({username:data.username,email:data.email,status:data.status})\n\t\t\t}\n\t\t    else{\n\t\t\t\tNotificationManager.warning(\"in valid credentails ...\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t\n\t\t}\n\t\t   \n\t\t}).catch((err)=>{\n\t\t    console.log(err);\n\n\t\t})\n\t};\n// \t/** HANDLE FORM SUBMIT END * */\n\n\t  return(\n\t\t <div className=\"container\">\n\t\t\t{load ? (  <div className=\"form-box\">\n\t\t\t<div className=\"header-form\">\n\t\t\t  <h4 className=\"text-primary text-center\"><i className=\"fa fa-user-circle\" style={{fontSize:\"110px\"}}></i></h4>\n\t\t\t  <div className=\"image\">\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"body-form\">\n\t\t\t <form>\n\t\t\t\t<div className=\"input-group mb-3\">\n\t <div className=\"input-group-prepend\">\n\t  <span className=\"input-group-text\"><FaIcons.FaUser size=\"25\"/></span>\n\t</div>\n\n\t\n \t\t\t\t\t\t\n \t\t\t\t\t\n \t\t\t\t\t\n<input ref={register} type='text' id='email' name='email' placeholder='email' />\n{errors?.email ? (\n \t\t\t\t\t\t<small className='font-weight-bold text-danger'>{errors?.email.message}</small>\n \t\t\t\t\t) : (\n \t\t\t\t\t\t<></>\n \t\t\t\t\t)}\n</div>\n   <div className=\"input-group mb-3\">\n\t <div className=\"input-group-prepend\">\n\t  <span className=\"input-group-text\"><FaIcons.FaLock size=\"25\"/></span>\n\t</div>\n\t<input type=\"text\" className=\"form-control\" placeholder=\"Password\" />\n  </div>\n   <button type=\"button\" className=\"btn btn-secondary btn-block\">LOGIN</button>\n   <div className=\"message\">\n  <div><input type=\"checkbox\" /> Remember ME</div>\n   <div><Link href=\"#\">Forgot your password</Link></div>\n   </div>\n\t </form>\n\t\t\t  <div className=\"social\">\n\t\t\t\t<Link href=\"#\"><FaIcons.FaFacebook size=\"25\"/></Link>\n\t\t\t\t<Link href=\"#\"><FaIcons.FaTwitterSquare size=\"25\"/></Link>\n\t\t\t\t<Link href=\"#\"><FaIcons.FaGoogle size=\"25\"/></Link>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>):(<BoxLoading/>)}\n\t\t<NotificationContainer/>\n\t\t </div>   \n\t  )\n\t}\n  \n\texport default LoginPage;\n  \n "]},"metadata":{},"sourceType":"module"}