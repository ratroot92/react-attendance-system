{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/AttendancePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AuthContext } from '../context/authContext';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport MuiDataTable from 'mui-datatables';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport attendanceService from '../services/attendanceService';\nimport { NotificationManager } from 'react-notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AttendancePage() {\n  _s();\n\n  var _state$;\n\n  const [load, setLoad] = React.useState(true);\n  const [state, setState] = React.useState([]);\n  const {\n    user\n  } = React.useContext(AuthContext);\n  /** FORM_VALIDATION START * */\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().email().required('Email is required')\n  });\n  /** FORM_VALIDATION END * */\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      email: 'admin@admin.com'\n    }\n  });\n  /** COMPONENT_DID_MOUNT START */\n\n  React.useEffect(() => {\n    return () => {\n      setLoad(true);\n    };\n  }, []);\n  /** COMPONENT_DID_MOUNT START */\n\n  /** HANDLE FORM SUBMIT START * */\n\n  const onSubmit = formData => {\n    setLoad(false);\n    attendanceService.getAttendanceByEmail({\n      email: formData.email\n    }).then(resData => {\n      console.log(resData);\n\n      if (resData.success) {\n        NotificationManager.success('request successfull');\n        setState(resData.data);\n        console.log(resData.data);\n      }\n\n      setLoad(true);\n    }).catch(err => {\n      console.log(err);\n      setLoad(true);\n    });\n  };\n  /** HANDLE FORM SUBMIT END * */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: state && state.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            ref: register,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-sm btn-success\",\n            children: \"View Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MuiDataTable, {\n        title: `${(_state$ = state[0]) === null || _state$ === void 0 ? void 0 : _state$.username} attendance`,\n        data: state || []\n        /**\n         * EXAMPLE COLUMN RENDERING\n         * https://github.com/gregnb/mui-datatables/blob/master/examples/component/index.js\n         */\n        ,\n        columns: [{\n          name: 'id',\n          label: 'Id',\n          options: {\n            display: 'false'\n          }\n        }, {\n          name: 'email',\n          label: 'Email',\n          options: {\n            display: 'true'\n          }\n        }, {\n          name: 'username',\n          label: 'Username',\n          options: {\n            display: 'true'\n          }\n        }, {\n          name: 'date',\n          label: 'Date',\n          options: {\n            display: 'true'\n          }\n        }, {\n          name: 'isMarked',\n          label: 'is Marked',\n          options: {\n            display: 'true',\n            customBodyRender: value => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-weight-bold text-${value}?\"success\":\"danger\"`,\n              children: value === 1 ? 'present' : 'absent'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 11\n            }, this)\n          }\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success btn-sm\",\n        onClick: () => setState([]),\n        children: \"View Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AttendancePage, \"zVhD49k4GH18IZ5U/Nvwp71Rqx4=\", false, function () {\n  return [useForm];\n});\n\n_c = AttendancePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/AttendancePage.jsx"],"names":["React","AuthContext","useForm","BoxLoading","MuiDataTable","yupResolver","yup","attendanceService","NotificationManager","AttendancePage","load","setLoad","useState","state","setState","user","useContext","validationSchema","object","shape","email","string","required","register","errors","handleSubmit","reset","resolver","defaultValues","useEffect","onSubmit","formData","getAttendanceByEmail","then","resData","console","log","success","data","catch","err","length","username","name","label","options","display","customBodyRender","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AuthContext } from '../context/authContext';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport MuiDataTable from 'mui-datatables';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport attendanceService from '../services/attendanceService';\nimport { NotificationManager } from 'react-notifications';\n\nexport default function AttendancePage() {\n\tconst [load, setLoad] = React.useState(true);\n\tconst [state, setState] = React.useState([]);\n\tconst { user } = React.useContext(AuthContext);\n\n\t/** FORM_VALIDATION START * */\n\tconst validationSchema = yup.object().shape({\n\t\temail: yup.string().email().required('Email is required'),\n\t});\n\t/** FORM_VALIDATION END * */\n\n\tconst { register, errors, handleSubmit, reset } = useForm({\n\t\tresolver: yupResolver(validationSchema),\n\t\tdefaultValues: {\n\t\t\temail: 'admin@admin.com',\n\t\t},\n\t});\n\n\t/** COMPONENT_DID_MOUNT START */\n\tReact.useEffect(() => {\n\t\treturn () => {\n\t\t\tsetLoad(true);\n\t\t};\n\t}, []);\n\t/** COMPONENT_DID_MOUNT START */\n\n\t/** HANDLE FORM SUBMIT START * */\n\tconst onSubmit = (formData) => {\n\t\tsetLoad(false);\n\t\tattendanceService\n\t\t\t.getAttendanceByEmail({ email: formData.email })\n\t\t\t.then((resData) => {\n\t\t\t\tconsole.log(resData);\n\t\t\t\tif (resData.success) {\n\t\t\t\t\tNotificationManager.success('request successfull');\n\t\t\t\t\tsetState(resData.data);\n\t\t\t\t\tconsole.log(resData.data);\n\t\t\t\t}\n\t\t\t\tsetLoad(true);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoad(true);\n\t\t\t});\n\t};\n\t/** HANDLE FORM SUBMIT END * */\n\treturn (\n\t\t<div className='text-center'>\n\t\t\t{/* {load?(<>load true</>):(<>false</>)} */}\n\t\t\t{state && state.length === 0 ? (\n        <div className=\"card\">\n          <div className=\"card-header\"></div>\n          <div className=\"card-body\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<input type='email' name='email' ref={register} className='form-control' />\n\t\t\t\t\t<button type='submit' className='btn btn-sm btn-success'>\n\t\t\t\t\t\tView Attendance\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n          </div>\n          <div className=\"card-footer\"></div>\n        </div>\n\t\t\t\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<MuiDataTable\n\t\t\t\t\t\ttitle={`${state[0]?.username} attendance`}\n\t\t\t\t\t\tdata={state || []}\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * EXAMPLE COLUMN RENDERING\n\t\t\t\t\t\t * https://github.com/gregnb/mui-datatables/blob/master/examples/component/index.js\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\t\t\tlabel: 'Id',\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdisplay: 'false',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\tlabel: 'Email',\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdisplay: 'true',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'username',\n\t\t\t\t\t\t\t\tlabel: 'Username',\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdisplay: 'true',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'date',\n\t\t\t\t\t\t\t\tlabel: 'Date',\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdisplay: 'true',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'isMarked',\n\t\t\t\t\t\t\t\tlabel: 'is Marked',\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdisplay: 'true',\n\t\t\t\t\t\t\t\t\tcustomBodyRender: (value) => (\n\t\t\t\t\t\t\t\t\t\t<span className={`font-weight-bold text-${value}?\"success\":\"danger\"`}>\n\t\t\t\t\t\t\t\t\t\t\t{value === 1 ? 'present' : 'absent'}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type='button' className='btn btn-success btn-sm' onClick={() => setState([])}>\n\t\t\t\t\t\tView Again\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}