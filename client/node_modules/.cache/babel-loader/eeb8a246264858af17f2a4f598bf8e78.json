{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/angan_test/client/src/pages/AttendancePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AuthContext } from '../context/authContext';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport MuiDataTable from \"mui-datatables\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport attendanceService from '../services/attendanceService';\nimport { NotificationManager } from 'react-notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AttendancePage() {\n  _s();\n\n  const [load, setLoad] = React.useState(true);\n  const [state, setState] = React.useState([]);\n  const {\n    user\n  } = React.useContext(AuthContext);\n  /** FORM_VALIDATION START * */\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().email().required('Email is required')\n  });\n  /** FORM_VALIDATION END * */\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      email: 'admin@admin.com'\n    }\n  });\n  /** COMPONENT_DID_MOUNT START */\n\n  React.useEffect(() => {\n    return () => {\n      setLoad(true);\n    };\n  }, []);\n  /** COMPONENT_DID_MOUNT START */\n\n  /** HANDLE FORM SUBMIT START * */\n\n  const onSubmit = formData => {\n    setLoad(false);\n    attendanceService.getAttendanceByEmail({\n      email: formData.email\n    }).then(resData => {\n      console.log(resData);\n\n      if (resData.success) {\n        NotificationManager.success(\"request successfull\");\n        setState(resData.data);\n        console.log(resData.data);\n      }\n\n      setLoad(true);\n    }).catch(err => {\n      console.log(err);\n      setLoad(true);\n    });\n  };\n  /** HANDLE FORM SUBMIT END * */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        ref: register,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-sm btn-success\",\n        children: \"View Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MuiDataTable, {\n      title: `${user.username} attendance`,\n      data: state || []\n      /**\n       * EXAMPLE COLUMN RENDERING\n       * https://github.com/gregnb/mui-datatables/blob/master/examples/component/index.js\n       */\n      ,\n      columns: [{\n        name: \"id\",\n        label: \"Id\",\n        options: {\n          display: \"false\"\n        }\n      }, {\n        name: \"username\",\n        label: \"Username\",\n        options: {\n          display: \"true\"\n        }\n      }, {\n        name: \"email\",\n        label: \"Email\",\n        options: {\n          display: \"false\"\n        }\n      }, {\n        name: \"date\",\n        label: \"Role\",\n        options: {\n          display: \"true\",\n          customBodyRender: value => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: value\n          }, void 0, false)\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AttendancePage, \"zVhD49k4GH18IZ5U/Nvwp71Rqx4=\", false, function () {\n  return [useForm];\n});\n\n_c = AttendancePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"sources":["/home/asd/Desktop/development/angan_test/client/src/pages/AttendancePage.jsx"],"names":["React","AuthContext","useForm","BoxLoading","MuiDataTable","yupResolver","yup","attendanceService","NotificationManager","AttendancePage","load","setLoad","useState","state","setState","user","useContext","validationSchema","object","shape","email","string","required","register","errors","handleSubmit","reset","resolver","defaultValues","useEffect","onSubmit","formData","getAttendanceByEmail","then","resData","console","log","success","data","catch","err","username","name","label","options","display","customBodyRender","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AuthContext } from '../context/authContext';\nimport { useForm } from 'react-hook-form';\nimport { BoxLoading } from 'react-loadingg';\nimport MuiDataTable from \"mui-datatables\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport attendanceService from '../services/attendanceService';\nimport { NotificationManager } from 'react-notifications';\n\nexport default function AttendancePage() {\n\tconst [load, setLoad] = React.useState(true);\n    const [state, setState] = React.useState([]);\n\tconst { user } = React.useContext(AuthContext);\n\n\n\n\t/** FORM_VALIDATION START * */\n\tconst validationSchema = yup.object().shape({\n\t\temail: yup.string().email().required('Email is required'),\n\t});\n\t/** FORM_VALIDATION END * */\n\n\tconst { register, errors, handleSubmit, reset } = useForm({\n\t\tresolver: yupResolver(validationSchema),\n\t\tdefaultValues: {\n\t\t\temail: 'admin@admin.com',\n\t\t},\n\t});\n\n\t/** COMPONENT_DID_MOUNT START */\n\tReact.useEffect(() => {\n\t\treturn () => {\n\t\t\tsetLoad(true);\n\t\t};\n\t}, []);\n\t/** COMPONENT_DID_MOUNT START */\n\n\t/** HANDLE FORM SUBMIT START * */\n\tconst onSubmit = (formData) => {\n        setLoad(false)\n\t\tattendanceService\n\t\t\t.getAttendanceByEmail({ email: formData.email })\n\t\t\t.then((resData) => {\n\t\t\t\tconsole.log(resData);\n                if(resData.success){\n                    NotificationManager.success(\"request successfull\");\n                    setState(resData.data)\n                    console.log(resData.data)\n                }\n\t\t\t\tsetLoad(true);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoad(true);\n\t\t\t});\n\t};\n\t/** HANDLE FORM SUBMIT END * */\n\treturn (\n\t\t<div className=\"text-center\">\n\t\t\t{/* {load?(<>load true</>):(<>false</>)} */}\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<input type='email' name='email' ref={register} className='form-control' />\n\t\t\t\t<button type='submit' className='btn btn-sm btn-success'>\n\t\t\t\t\tView Attendance\n\t\t\t\t</button>\n\t\t\t</form>\n            <MuiDataTable\n                    title={`${user.username} attendance`}\n                    data={state || []}\n                   \n                    /**\n                     * EXAMPLE COLUMN RENDERING\n                     * https://github.com/gregnb/mui-datatables/blob/master/examples/component/index.js\n                     */\n                    columns={[\n                      {\n                        name: \"id\",\n                        label: \"Id\",\n                        options: {\n                          display: \"false\",\n                        },\n                      },\n                      {\n                        name: \"username\",\n                        label: \"Username\",\n                        options: {\n                          display: \"true\",\n                        },\n                      },\n                      {\n                        name: \"email\",\n                        label: \"Email\",\n                        options: {\n                          display: \"false\",\n                        },\n                      },\n                      \n                      {\n                        name: \"date\",\n                        label: \"Role\",\n                        options: {\n                          display: \"true\",\n                          customBodyRender: (value) => (\n                            <>{value}</>\n                          ),\n                        },\n                      },\n\n                     \n\n                     \n                   \n                    ]}\n            \n                  />\n         \n\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}